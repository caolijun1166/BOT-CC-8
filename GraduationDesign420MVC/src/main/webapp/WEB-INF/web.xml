<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>GradutaionDesign420MVC</display-name>
  
  	<servlet>
		<servlet-name>default</servlet-name>
		<servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>0</param-value>
		</init-param>
		<init-param>
			<param-name>listings</param-name>
			<param-value>false</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
    
  <!-- Spring集成Web环境的通用配置，一般用于加载除Web层的Bean(如Dao、Service等)，
                       以便于与其他任何Web框架集成 -->  
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:spring-mybatis.xml</param-value>  
    </context-param>
      
    <!-- 编码过滤器，用于解决POST方式造成的中文乱码问题 -->  
    <filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <async-supported>true</async-supported>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
    </filter>
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
      
    <!-- Spring监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>
      
    <!-- 防止Spring内存溢出监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener>  
  
    <!-- Spring MVC Dispatcherservlet -->
    
    <!-- load-on-startup: 表示启动容器时初始化该 Servlet 
         url-pattern: 表示哪些请求交给 Spring Web MVC 框架处理，
         "/"是用来定义默认Servlet映射的，也可以如"*.html"表示拦截所有以 html 为扩展名的请求-->
         
    <!-- 默认 DispatcherServlet 会加载 WEB-INF/XXX-servlet.xml配置文件，
                       如果使用了 contextConfigLocation 参数，Spring Web MVC 框架将会加载 classpath 下的指定配置文件， 
                       而不是 " /WEB-INF/XXX-servlet.xml "文件-->
    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath:spring-mvc.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
        <async-supported>true</async-supported>  
    </servlet>
    
    <servlet-mapping>  
        <servlet-name>DispatcherServlet</servlet-name>    
        <url-pattern>/</url-pattern>  
    </servlet-mapping>
     
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.html</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
       <servlet-name>default</servlet-name>
       <url-pattern>*.js</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
       <servlet-name>default</servlet-name>
       <url-pattern>*.css</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
       <servlet-name>default</servlet-name>
       <url-pattern>*.gif</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
       <servlet-name>default</servlet-name>
       <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
       <servlet-name>default</servlet-name>
       <url-pattern>*.ico</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
       <servlet-name>default</servlet-name>
       <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
       <servlet-name>default</servlet-name>
       <url-pattern>*.htm</url-pattern>
    </servlet-mapping>
    
    <welcome-file-list>
    	<welcome-file>index.html</welcome-file>
    </welcome-file-list>
</web-app>